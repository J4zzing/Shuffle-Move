<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir=".." default="build" name="Shuffle Move">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="../../Users/Andrew/Documents/eclipse/" />
	<property name="junit.output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<path id="Shuffle Move.classpath">
		<pathelement location="bin" />
		<pathelement location="build/ant-launcher.jar" />
		<pathelement location="build/ant.jar" />
		<pathelement location="build/commons-io-2.4.jar" />
		<pathelement location="build/commons-lang3-3.4.jar" />
		<pathelement location="build/junit.jar" />
		<pathelement location="build/org.hamcrest.core_1.3.0.v201303031735.jar" />
	</path>
	<target name="updateversion">
		<loadfile srcfile="README.md" property="version.full">
			<filterchain>
				<headfilter lines="1" />
			</filterchain>
		</loadfile>
		<script language="javascript">
			var re = new RegExp(/v(\d+).(\d+).(\d+)/);
			var m = re.exec(project.getProperty("version.full"));
		    project.setProperty("version.major", m[1]);
		    project.setProperty("version.minor", m[2]);
			project.setProperty("version.subminor", m[3]);
			project.setProperty("build.date.epoch", (new Date).getTime());
		</script>
		<delete file="src/shuffle/fwk/ShuffleVersion.java" />
		<copy file="build/ShuffleVersion.java_template" tofile="src/shuffle/fwk/ShuffleVersion.java" encoding="UTF-8" />
		<replaceregexp file="src/shuffle/fwk/ShuffleVersion.java" match="BUILD_DATE_REPLACE" replace="${build.date.epoch}" flags="g" encoding="UTF-8" />
		<replaceregexp file="src/shuffle/fwk/ShuffleVersion.java" match="VERSION_MAJOR_REPLACE" replace="${version.major}" flags="g" encoding="UTF-8" />
		<replaceregexp file="src/shuffle/fwk/ShuffleVersion.java" match="VERSION_MINOR_REPLACE" replace="${version.minor}" flags="g" encoding="UTF-8" />
		<replaceregexp file="src/shuffle/fwk/ShuffleVersion.java" match="VERSION_SUBMINOR_REPLACE" replace="${version.subminor}" flags="g" encoding="UTF-8" />
		<echo message="Date was ${build.date.epoch}" />
		<echo message="Major was ${version.major}" />
		<echo message="Minor was ${version.minor}" />
		<echo message="SubMinor was ${version.subminor}" />
	</target>
	<target depends="updateversion" name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="i18n">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="resources">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean,init,build" name="cleanAndBuild" />
	<target depends="init" name="build">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<src path="i18n" />
			<src path="resources" />
			<classpath refid="Shuffle Move.classpath" />
		</javac>
	</target>
	<target name="ShuffleMove">
		<java classname="shuffle.fwk.ShuffleController" failonerror="true" fork="yes">
			<jvmarg line="-splash:resources/img/splash.png" />
			<classpath refid="Shuffle Move.classpath" />
		</java>
	</target>
	<target depends="cleanAndBuild" name="ShuffleTest">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="shuffle.test.TestAll" todir="${junit.output.dir}" />
			<classpath refid="Shuffle Move.classpath" />
		</junit>
	</target>
	<target depends="ShuffleTest" name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>
</project>
